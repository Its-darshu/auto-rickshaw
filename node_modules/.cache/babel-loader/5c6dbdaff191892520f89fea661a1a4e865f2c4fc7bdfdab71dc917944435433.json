{"ast":null,"code":"// Firebase Configuration for Village Auto Connect\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, GoogleAuthProvider } from 'firebase/auth';\nimport { getFirestore } from 'firebase/firestore';\n\n// Firebase config - Sullia Auto Connect Project\nconst firebaseConfig = {\n  apiKey: import.meta.env.VITE_FIREBASE_API_KEY || \"AIzaSyC_CsK5PAJcP9VclF7u42IQc0ClI6fOZdw\",\n  authDomain: import.meta.env.VITE_FIREBASE_AUTH_DOMAIN || \"sullia-auto-connect.firebaseapp.com\",\n  projectId: import.meta.env.VITE_FIREBASE_PROJECT_ID || \"sullia-auto-connect\",\n  storageBucket: import.meta.env.VITE_FIREBASE_STORAGE_BUCKET || \"sullia-auto-connect.firebasestorage.app\",\n  messagingSenderId: import.meta.env.VITE_FIREBASE_MESSAGING_SENDER_ID || \"648404312897\",\n  appId: import.meta.env.VITE_FIREBASE_APP_ID || \"1:648404312897:web:22218d3a3a4109b587f7c0\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Initialize Firebase Authentication and get a reference to the service\nexport const auth = getAuth(app);\n\n// Initialize Firestore Database\nexport const db = getFirestore(app);\n\n// Initialize Google Auth Provider\nexport const googleProvider = new GoogleAuthProvider();\n\n// Configure Google Provider\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport default app;","map":{"version":3,"names":["initializeApp","getAuth","GoogleAuthProvider","getFirestore","firebaseConfig","apiKey","import","meta","env","VITE_FIREBASE_API_KEY","authDomain","VITE_FIREBASE_AUTH_DOMAIN","projectId","VITE_FIREBASE_PROJECT_ID","storageBucket","VITE_FIREBASE_STORAGE_BUCKET","messagingSenderId","VITE_FIREBASE_MESSAGING_SENDER_ID","appId","VITE_FIREBASE_APP_ID","app","auth","db","googleProvider","setCustomParameters","prompt"],"sources":["D:/proj/auto-rickshaw/src/config/firebase.ts"],"sourcesContent":["// Firebase Configuration for Village Auto Connect\r\nimport { initializeApp } from 'firebase/app';\r\nimport { getAuth, GoogleAuthProvider } from 'firebase/auth';\r\nimport { getFirestore } from 'firebase/firestore';\r\n\r\n// Firebase config - Sullia Auto Connect Project\r\nconst firebaseConfig = {\r\n  apiKey: import.meta.env.VITE_FIREBASE_API_KEY || \"AIzaSyC_CsK5PAJcP9VclF7u42IQc0ClI6fOZdw\",\r\n  authDomain: import.meta.env.VITE_FIREBASE_AUTH_DOMAIN || \"sullia-auto-connect.firebaseapp.com\",\r\n  projectId: import.meta.env.VITE_FIREBASE_PROJECT_ID || \"sullia-auto-connect\",\r\n  storageBucket: import.meta.env.VITE_FIREBASE_STORAGE_BUCKET || \"sullia-auto-connect.firebasestorage.app\",\r\n  messagingSenderId: import.meta.env.VITE_FIREBASE_MESSAGING_SENDER_ID || \"648404312897\",\r\n  appId: import.meta.env.VITE_FIREBASE_APP_ID || \"1:648404312897:web:22218d3a3a4109b587f7c0\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n// Initialize Firebase Authentication and get a reference to the service\r\nexport const auth = getAuth(app);\r\n\r\n// Initialize Firestore Database\r\nexport const db = getFirestore(app);\r\n\r\n// Initialize Google Auth Provider\r\nexport const googleProvider = new GoogleAuthProvider();\r\n\r\n// Configure Google Provider\r\ngoogleProvider.setCustomParameters({\r\n  prompt: 'select_account'\r\n});\r\n\r\nexport default app;"],"mappings":"AAAA;AACA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,EAAEC,kBAAkB,QAAQ,eAAe;AAC3D,SAASC,YAAY,QAAQ,oBAAoB;;AAEjD;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAEC,MAAM,CAACC,IAAI,CAACC,GAAG,CAACC,qBAAqB,IAAI,yCAAyC;EAC1FC,UAAU,EAAEJ,MAAM,CAACC,IAAI,CAACC,GAAG,CAACG,yBAAyB,IAAI,qCAAqC;EAC9FC,SAAS,EAAEN,MAAM,CAACC,IAAI,CAACC,GAAG,CAACK,wBAAwB,IAAI,qBAAqB;EAC5EC,aAAa,EAAER,MAAM,CAACC,IAAI,CAACC,GAAG,CAACO,4BAA4B,IAAI,yCAAyC;EACxGC,iBAAiB,EAAEV,MAAM,CAACC,IAAI,CAACC,GAAG,CAACS,iCAAiC,IAAI,cAAc;EACtFC,KAAK,EAAEZ,MAAM,CAACC,IAAI,CAACC,GAAG,CAACW,oBAAoB,IAAI;AACjD,CAAC;;AAED;AACA,MAAMC,GAAG,GAAGpB,aAAa,CAACI,cAAc,CAAC;;AAEzC;AACA,OAAO,MAAMiB,IAAI,GAAGpB,OAAO,CAACmB,GAAG,CAAC;;AAEhC;AACA,OAAO,MAAME,EAAE,GAAGnB,YAAY,CAACiB,GAAG,CAAC;;AAEnC;AACA,OAAO,MAAMG,cAAc,GAAG,IAAIrB,kBAAkB,CAAC,CAAC;;AAEtD;AACAqB,cAAc,CAACC,mBAAmB,CAAC;EACjCC,MAAM,EAAE;AACV,CAAC,CAAC;AAEF,eAAeL,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}