{"ast":null,"code":"var _jsxFileName = \"D:\\\\proj\\\\auto-rickshaw\\\\src\\\\context\\\\DataContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { collection, onSnapshot, query, orderBy } from 'firebase/firestore';\nimport { db } from '../config/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataContext = /*#__PURE__*/createContext(undefined);\nexport const useData = () => {\n  _s();\n  const context = useContext(DataContext);\n  if (!context) {\n    throw new Error('useData must be used within a DataProvider');\n  }\n  return context;\n};\n_s(useData, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n// Firestore collections\nconst DRIVERS_COLLECTION = 'drivers';\nconst STAGES_COLLECTION = 'stages';\nexport const DataProvider = ({\n  children\n}) => {\n  _s2();\n  const [drivers, setDrivers] = useState([]);\n  const [stages, setStages] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // Real-time listeners for Firestore data\n  useEffect(() => {\n    // Listen to stages changes\n    const stagesQuery = query(collection(db, STAGES_COLLECTION), orderBy('name'));\n    const unsubscribeStages = onSnapshot(stagesQuery, snapshot => {\n      const stagesData = [];\n      snapshot.forEach(doc => {\n        stagesData.push({\n          id: doc.id,\n          ...doc.data()\n        });\n      });\n      setStages(stagesData);\n      setLoading(false);\n    });\n\n    // Listen to drivers changes\n    const driversQuery = query(collection(db, DRIVERS_COLLECTION), orderBy('name'));\n    const unsubscribeDrivers = onSnapshot(driversQuery, snapshot => {\n      const driversData = [];\n      snapshot.forEach(doc => {\n        driversData.push({\n          id: doc.id,\n          ...doc.data()\n        });\n      });\n      setDrivers(driversData);\n    });\n\n    // Cleanup listeners\n    return () => {\n      unsubscribeStages();\n      unsubscribeDrivers();\n    };\n  }, []);\n  const addDriver = newDriver => {\n    const driver = {\n      ...newDriver,\n      id: Date.now().toString()\n    };\n    setDrivers(prev => [...prev, driver]);\n  };\n  const updateDriver = (id, updatedDriver) => {\n    setDrivers(prev => prev.map(driver => driver.id === id ? {\n      ...driver,\n      ...updatedDriver\n    } : driver));\n  };\n  const deleteDriver = id => {\n    setDrivers(prev => prev.filter(driver => driver.id !== id));\n  };\n  const addStage = newStage => {\n    const stage = {\n      ...newStage,\n      id: Date.now().toString()\n    };\n    setStages(prev => [...prev, stage]);\n  };\n  const updateStage = (id, updatedStage) => {\n    setStages(prev => prev.map(stage => stage.id === id ? {\n      ...stage,\n      ...updatedStage\n    } : stage));\n  };\n  const deleteStage = id => {\n    setStages(prev => prev.filter(stage => stage.id !== id));\n    // Also remove drivers from deleted stage\n    setDrivers(prev => prev.filter(driver => driver.stageId !== id));\n  };\n  const getDriversByStage = stageId => {\n    return drivers.filter(driver => driver.stageId === stageId);\n  };\n  const getEmergencyDrivers = () => {\n    return drivers.filter(driver => driver.isEmergency);\n  };\n  const searchDrivers = query => {\n    if (!query.trim()) return [];\n    const lowerQuery = query.toLowerCase();\n    return drivers.filter(driver => driver.name.toLowerCase().includes(lowerQuery) || driver.phoneNumber.includes(query) || driver.vehicleNumber.toLowerCase().includes(lowerQuery));\n  };\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: {\n      drivers,\n      stages,\n      addDriver,\n      updateDriver,\n      deleteDriver,\n      addStage,\n      updateStage,\n      deleteStage,\n      getDriversByStage,\n      getEmergencyDrivers,\n      searchDrivers\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n_s2(DataProvider, \"+wNbAqeHvpc0nrHnWYfZYVk3szE=\");\n_c = DataProvider;\nvar _c;\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","collection","onSnapshot","query","orderBy","db","jsxDEV","_jsxDEV","DataContext","undefined","useData","_s","context","Error","DRIVERS_COLLECTION","STAGES_COLLECTION","DataProvider","children","_s2","drivers","setDrivers","stages","setStages","loading","setLoading","stagesQuery","unsubscribeStages","snapshot","stagesData","forEach","doc","push","id","data","driversQuery","unsubscribeDrivers","driversData","addDriver","newDriver","driver","Date","now","toString","prev","updateDriver","updatedDriver","map","deleteDriver","filter","addStage","newStage","stage","updateStage","updatedStage","deleteStage","stageId","getDriversByStage","getEmergencyDrivers","isEmergency","searchDrivers","trim","lowerQuery","toLowerCase","name","includes","phoneNumber","vehicleNumber","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/proj/auto-rickshaw/src/context/DataContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { \r\n  collection, \r\n  addDoc, \r\n  updateDoc, \r\n  deleteDoc, \r\n  doc, \r\n  onSnapshot, \r\n  query, \r\n  orderBy,\r\n  getDocs,\r\n  writeBatch\r\n} from 'firebase/firestore';\r\nimport { db } from '../config/firebase';\r\n\r\nexport interface Driver {\r\n  id: string;\r\n  name: string;\r\n  phoneNumber: string;\r\n  vehicleNumber: string;\r\n  stageId: string;\r\n  isEmergency: boolean;\r\n  whatsappNumber?: string;\r\n}\r\n\r\nexport interface Stage {\r\n  id: string;\r\n  name: string;\r\n  nameKn: string;\r\n  latitude?: number;\r\n  longitude?: number;\r\n}\r\n\r\ninterface DataContextType {\r\n  drivers: Driver[];\r\n  stages: Stage[];\r\n  addDriver: (driver: Omit<Driver, 'id'>) => void;\r\n  updateDriver: (id: string, driver: Partial<Driver>) => void;\r\n  deleteDriver: (id: string) => void;\r\n  addStage: (stage: Omit<Stage, 'id'>) => void;\r\n  updateStage: (id: string, stage: Partial<Stage>) => void;\r\n  deleteStage: (id: string) => void;\r\n  getDriversByStage: (stageId: string) => Driver[];\r\n  getEmergencyDrivers: () => Driver[];\r\n  searchDrivers: (query: string) => Driver[];\r\n}\r\n\r\nconst DataContext = createContext<DataContextType | undefined>(undefined);\r\n\r\nexport const useData = () => {\r\n  const context = useContext(DataContext);\r\n  if (!context) {\r\n    throw new Error('useData must be used within a DataProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface DataProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\n// Firestore collections\r\nconst DRIVERS_COLLECTION = 'drivers';\r\nconst STAGES_COLLECTION = 'stages';\r\n\r\nexport const DataProvider: React.FC<DataProviderProps> = ({ children }) => {\r\n  const [drivers, setDrivers] = useState<Driver[]>([]);\r\n  const [stages, setStages] = useState<Stage[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Real-time listeners for Firestore data\r\n  useEffect(() => {\r\n    // Listen to stages changes\r\n    const stagesQuery = query(collection(db, STAGES_COLLECTION), orderBy('name'));\r\n    const unsubscribeStages = onSnapshot(stagesQuery, (snapshot) => {\r\n      const stagesData: Stage[] = [];\r\n      snapshot.forEach((doc) => {\r\n        stagesData.push({ id: doc.id, ...doc.data() } as Stage);\r\n      });\r\n      setStages(stagesData);\r\n      setLoading(false);\r\n    });\r\n\r\n    // Listen to drivers changes\r\n    const driversQuery = query(collection(db, DRIVERS_COLLECTION), orderBy('name'));\r\n    const unsubscribeDrivers = onSnapshot(driversQuery, (snapshot) => {\r\n      const driversData: Driver[] = [];\r\n      snapshot.forEach((doc) => {\r\n        driversData.push({ id: doc.id, ...doc.data() } as Driver);\r\n      });\r\n      setDrivers(driversData);\r\n    });\r\n\r\n    // Cleanup listeners\r\n    return () => {\r\n      unsubscribeStages();\r\n      unsubscribeDrivers();\r\n    };\r\n  }, []);\r\n\r\n  const addDriver = (newDriver: Omit<Driver, 'id'>) => {\r\n    const driver: Driver = {\r\n      ...newDriver,\r\n      id: Date.now().toString(),\r\n    };\r\n    setDrivers(prev => [...prev, driver]);\r\n  };\r\n\r\n  const updateDriver = (id: string, updatedDriver: Partial<Driver>) => {\r\n    setDrivers(prev => prev.map(driver => \r\n      driver.id === id ? { ...driver, ...updatedDriver } : driver\r\n    ));\r\n  };\r\n\r\n  const deleteDriver = (id: string) => {\r\n    setDrivers(prev => prev.filter(driver => driver.id !== id));\r\n  };\r\n\r\n  const addStage = (newStage: Omit<Stage, 'id'>) => {\r\n    const stage: Stage = {\r\n      ...newStage,\r\n      id: Date.now().toString(),\r\n    };\r\n    setStages(prev => [...prev, stage]);\r\n  };\r\n\r\n  const updateStage = (id: string, updatedStage: Partial<Stage>) => {\r\n    setStages(prev => prev.map(stage => \r\n      stage.id === id ? { ...stage, ...updatedStage } : stage\r\n    ));\r\n  };\r\n\r\n  const deleteStage = (id: string) => {\r\n    setStages(prev => prev.filter(stage => stage.id !== id));\r\n    // Also remove drivers from deleted stage\r\n    setDrivers(prev => prev.filter(driver => driver.stageId !== id));\r\n  };\r\n\r\n  const getDriversByStage = (stageId: string): Driver[] => {\r\n    return drivers.filter(driver => driver.stageId === stageId);\r\n  };\r\n\r\n  const getEmergencyDrivers = (): Driver[] => {\r\n    return drivers.filter(driver => driver.isEmergency);\r\n  };\r\n\r\n  const searchDrivers = (query: string): Driver[] => {\r\n    if (!query.trim()) return [];\r\n    \r\n    const lowerQuery = query.toLowerCase();\r\n    return drivers.filter(driver =>\r\n      driver.name.toLowerCase().includes(lowerQuery) ||\r\n      driver.phoneNumber.includes(query) ||\r\n      driver.vehicleNumber.toLowerCase().includes(lowerQuery)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <DataContext.Provider\r\n      value={{\r\n        drivers,\r\n        stages,\r\n        addDriver,\r\n        updateDriver,\r\n        deleteDriver,\r\n        addStage,\r\n        updateStage,\r\n        deleteStage,\r\n        getDriversByStage,\r\n        getEmergencyDrivers,\r\n        searchDrivers,\r\n      }}\r\n    >\r\n      {children}\r\n    </DataContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}