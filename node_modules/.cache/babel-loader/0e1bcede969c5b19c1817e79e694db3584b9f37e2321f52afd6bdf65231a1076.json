{"ast":null,"code":"// Firebase Configuration for Village Auto Connect\nimport { initializeApp } from 'firebase/app';\nimport { getAuth, GoogleAuthProvider } from 'firebase/auth';\n\n// Firebase config (For demo purposes - replace with your actual config)\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDemoApiKey-replace-with-your-key\",\n  authDomain: \"village-auto-connect-demo.firebaseapp.com\",\n  projectId: \"village-auto-connect-demo\",\n  storageBucket: \"village-auto-connect-demo.appspot.com\",\n  messagingSenderId: \"123456789012\",\n  appId: \"1:123456789012:web:abcdefghijklmnop\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Initialize Firebase Authentication and get a reference to the service\nexport const auth = getAuth(app);\n\n// Initialize Google Auth Provider\nexport const googleProvider = new GoogleAuthProvider();\n\n// Configure Google Provider\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport default app;","map":{"version":3,"names":["initializeApp","getAuth","GoogleAuthProvider","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","auth","googleProvider","setCustomParameters","prompt"],"sources":["D:/proj/auto-rickshaw/src/config/firebase.ts"],"sourcesContent":["// Firebase Configuration for Village Auto Connect\r\nimport { initializeApp } from 'firebase/app';\r\nimport { getAuth, GoogleAuthProvider } from 'firebase/auth';\r\n\r\n// Firebase config (For demo purposes - replace with your actual config)\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDemoApiKey-replace-with-your-key\",\r\n  authDomain: \"village-auto-connect-demo.firebaseapp.com\",\r\n  projectId: \"village-auto-connect-demo\",\r\n  storageBucket: \"village-auto-connect-demo.appspot.com\",\r\n  messagingSenderId: \"123456789012\",\r\n  appId: \"1:123456789012:web:abcdefghijklmnop\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n// Initialize Firebase Authentication and get a reference to the service\r\nexport const auth = getAuth(app);\r\n\r\n// Initialize Google Auth Provider\r\nexport const googleProvider = new GoogleAuthProvider();\r\n\r\n// Configure Google Provider\r\ngoogleProvider.setCustomParameters({\r\n  prompt: 'select_account'\r\n});\r\n\r\nexport default app;"],"mappings":"AAAA;AACA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,EAAEC,kBAAkB,QAAQ,eAAe;;AAE3D;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,wCAAwC;EAChDC,UAAU,EAAE,2CAA2C;EACvDC,SAAS,EAAE,2BAA2B;EACtCC,aAAa,EAAE,uCAAuC;EACtDC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,MAAMC,GAAG,GAAGV,aAAa,CAACG,cAAc,CAAC;;AAEzC;AACA,OAAO,MAAMQ,IAAI,GAAGV,OAAO,CAACS,GAAG,CAAC;;AAEhC;AACA,OAAO,MAAME,cAAc,GAAG,IAAIV,kBAAkB,CAAC,CAAC;;AAEtD;AACAU,cAAc,CAACC,mBAAmB,CAAC;EACjCC,MAAM,EAAE;AACV,CAAC,CAAC;AAEF,eAAeJ,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}