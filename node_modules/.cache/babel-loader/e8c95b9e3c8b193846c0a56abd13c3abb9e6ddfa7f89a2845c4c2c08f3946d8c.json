{"ast":null,"code":"import _objectSpread from\"D:/proj/auto-rickshaw/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const DataContext=/*#__PURE__*/createContext(undefined);export const useData=()=>{const context=useContext(DataContext);if(!context){throw new Error('useData must be used within a DataProvider');}return context;};// Initial sample data\nconst initialStages=[{id:'1',name:'Bus Stand',nameKn:'ಬಸ್ ಸ್ಟಾಂಡ್',latitude:12.9716,longitude:77.5946},{id:'2',name:'Market',nameKn:'ಮಾರುಕಟ್ಟೆ',latitude:12.9726,longitude:77.5956},{id:'3',name:'Hospital',nameKn:'ಆಸ್ಪತ್ರೆ',latitude:12.9736,longitude:77.5966},{id:'4',name:'School',nameKn:'ಶಾಲೆ',latitude:12.9746,longitude:77.5976},{id:'5',name:'Temple',nameKn:'ದೇವಸ್ಥಾನ',latitude:12.9756,longitude:77.5986}];const initialDrivers=[{id:'1',name:'Rajesh Kumar',phoneNumber:'+919876543210',vehicleNumber:'KA-01-AB-1234',stageId:'1',isEmergency:true,whatsappNumber:'+919876543210'},{id:'2',name:'Suresh Gowda',phoneNumber:'+919876543211',vehicleNumber:'KA-01-AB-1235',stageId:'1',isEmergency:false,whatsappNumber:'+919876543211'},{id:'3',name:'Manjunath',phoneNumber:'+919876543212',vehicleNumber:'KA-01-AB-1236',stageId:'2',isEmergency:true,whatsappNumber:'+919876543212'},{id:'4',name:'Venkatesh Reddy',phoneNumber:'+919876543213',vehicleNumber:'KA-01-AB-1237',stageId:'2',isEmergency:false},{id:'5',name:'Krishna Murthy',phoneNumber:'+919876543214',vehicleNumber:'KA-01-AB-1238',stageId:'3',isEmergency:true,whatsappNumber:'+919876543214'},{id:'6',name:'Ravi Sharma',phoneNumber:'+919876543215',vehicleNumber:'KA-01-AB-1239',stageId:'4',isEmergency:false,whatsappNumber:'+919876543215'}];export const DataProvider=_ref=>{let{children}=_ref;const[drivers,setDrivers]=useState(initialDrivers);const[stages,setStages]=useState(initialStages);const addDriver=newDriver=>{const driver=_objectSpread(_objectSpread({},newDriver),{},{id:Date.now().toString()});setDrivers(prev=>[...prev,driver]);};const updateDriver=(id,updatedDriver)=>{setDrivers(prev=>prev.map(driver=>driver.id===id?_objectSpread(_objectSpread({},driver),updatedDriver):driver));};const deleteDriver=id=>{setDrivers(prev=>prev.filter(driver=>driver.id!==id));};const addStage=newStage=>{const stage=_objectSpread(_objectSpread({},newStage),{},{id:Date.now().toString()});setStages(prev=>[...prev,stage]);};const updateStage=(id,updatedStage)=>{setStages(prev=>prev.map(stage=>stage.id===id?_objectSpread(_objectSpread({},stage),updatedStage):stage));};const deleteStage=id=>{setStages(prev=>prev.filter(stage=>stage.id!==id));// Also remove drivers from deleted stage\nsetDrivers(prev=>prev.filter(driver=>driver.stageId!==id));};const getDriversByStage=stageId=>{return drivers.filter(driver=>driver.stageId===stageId);};const getEmergencyDrivers=()=>{return drivers.filter(driver=>driver.isEmergency);};const searchDrivers=query=>{if(!query.trim())return[];const lowerQuery=query.toLowerCase();return drivers.filter(driver=>driver.name.toLowerCase().includes(lowerQuery)||driver.phoneNumber.includes(query)||driver.vehicleNumber.toLowerCase().includes(lowerQuery));};return/*#__PURE__*/_jsx(DataContext.Provider,{value:{drivers,stages,addDriver,updateDriver,deleteDriver,addStage,updateStage,deleteStage,getDriversByStage,getEmergencyDrivers,searchDrivers},children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","jsx","_jsx","DataContext","undefined","useData","context","Error","initialStages","id","name","nameKn","latitude","longitude","initialDrivers","phoneNumber","vehicleNumber","stageId","isEmergency","whatsappNumber","DataProvider","_ref","children","drivers","setDrivers","stages","setStages","addDriver","newDriver","driver","_objectSpread","Date","now","toString","prev","updateDriver","updatedDriver","map","deleteDriver","filter","addStage","newStage","stage","updateStage","updatedStage","deleteStage","getDriversByStage","getEmergencyDrivers","searchDrivers","query","trim","lowerQuery","toLowerCase","includes","Provider","value"],"sources":["D:/proj/auto-rickshaw/src/context/DataContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, ReactNode } from 'react';\r\n\r\nexport interface Driver {\r\n  id: string;\r\n  name: string;\r\n  phoneNumber: string;\r\n  vehicleNumber: string;\r\n  stageId: string;\r\n  isEmergency: boolean;\r\n  whatsappNumber?: string;\r\n}\r\n\r\nexport interface Stage {\r\n  id: string;\r\n  name: string;\r\n  nameKn: string;\r\n  latitude?: number;\r\n  longitude?: number;\r\n}\r\n\r\ninterface DataContextType {\r\n  drivers: Driver[];\r\n  stages: Stage[];\r\n  addDriver: (driver: Omit<Driver, 'id'>) => void;\r\n  updateDriver: (id: string, driver: Partial<Driver>) => void;\r\n  deleteDriver: (id: string) => void;\r\n  addStage: (stage: Omit<Stage, 'id'>) => void;\r\n  updateStage: (id: string, stage: Partial<Stage>) => void;\r\n  deleteStage: (id: string) => void;\r\n  getDriversByStage: (stageId: string) => Driver[];\r\n  getEmergencyDrivers: () => Driver[];\r\n  searchDrivers: (query: string) => Driver[];\r\n}\r\n\r\nconst DataContext = createContext<DataContextType | undefined>(undefined);\r\n\r\nexport const useData = () => {\r\n  const context = useContext(DataContext);\r\n  if (!context) {\r\n    throw new Error('useData must be used within a DataProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface DataProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\n// Initial sample data\r\nconst initialStages: Stage[] = [\r\n  { id: '1', name: 'Bus Stand', nameKn: 'ಬಸ್ ಸ್ಟಾಂಡ್', latitude: 12.9716, longitude: 77.5946 },\r\n  { id: '2', name: 'Market', nameKn: 'ಮಾರುಕಟ್ಟೆ', latitude: 12.9726, longitude: 77.5956 },\r\n  { id: '3', name: 'Hospital', nameKn: 'ಆಸ್ಪತ್ರೆ', latitude: 12.9736, longitude: 77.5966 },\r\n  { id: '4', name: 'School', nameKn: 'ಶಾಲೆ', latitude: 12.9746, longitude: 77.5976 },\r\n  { id: '5', name: 'Temple', nameKn: 'ದೇವಸ್ಥಾನ', latitude: 12.9756, longitude: 77.5986 },\r\n];\r\n\r\nconst initialDrivers: Driver[] = [\r\n  {\r\n    id: '1',\r\n    name: 'Rajesh Kumar',\r\n    phoneNumber: '+919876543210',\r\n    vehicleNumber: 'KA-01-AB-1234',\r\n    stageId: '1',\r\n    isEmergency: true,\r\n    whatsappNumber: '+919876543210'\r\n  },\r\n  {\r\n    id: '2',\r\n    name: 'Suresh Gowda',\r\n    phoneNumber: '+919876543211',\r\n    vehicleNumber: 'KA-01-AB-1235',\r\n    stageId: '1',\r\n    isEmergency: false,\r\n    whatsappNumber: '+919876543211'\r\n  },\r\n  {\r\n    id: '3',\r\n    name: 'Manjunath',\r\n    phoneNumber: '+919876543212',\r\n    vehicleNumber: 'KA-01-AB-1236',\r\n    stageId: '2',\r\n    isEmergency: true,\r\n    whatsappNumber: '+919876543212'\r\n  },\r\n  {\r\n    id: '4',\r\n    name: 'Venkatesh Reddy',\r\n    phoneNumber: '+919876543213',\r\n    vehicleNumber: 'KA-01-AB-1237',\r\n    stageId: '2',\r\n    isEmergency: false,\r\n  },\r\n  {\r\n    id: '5',\r\n    name: 'Krishna Murthy',\r\n    phoneNumber: '+919876543214',\r\n    vehicleNumber: 'KA-01-AB-1238',\r\n    stageId: '3',\r\n    isEmergency: true,\r\n    whatsappNumber: '+919876543214'\r\n  },\r\n  {\r\n    id: '6',\r\n    name: 'Ravi Sharma',\r\n    phoneNumber: '+919876543215',\r\n    vehicleNumber: 'KA-01-AB-1239',\r\n    stageId: '4',\r\n    isEmergency: false,\r\n    whatsappNumber: '+919876543215'\r\n  },\r\n];\r\n\r\nexport const DataProvider: React.FC<DataProviderProps> = ({ children }) => {\r\n  const [drivers, setDrivers] = useState<Driver[]>(initialDrivers);\r\n  const [stages, setStages] = useState<Stage[]>(initialStages);\r\n\r\n  const addDriver = (newDriver: Omit<Driver, 'id'>) => {\r\n    const driver: Driver = {\r\n      ...newDriver,\r\n      id: Date.now().toString(),\r\n    };\r\n    setDrivers(prev => [...prev, driver]);\r\n  };\r\n\r\n  const updateDriver = (id: string, updatedDriver: Partial<Driver>) => {\r\n    setDrivers(prev => prev.map(driver => \r\n      driver.id === id ? { ...driver, ...updatedDriver } : driver\r\n    ));\r\n  };\r\n\r\n  const deleteDriver = (id: string) => {\r\n    setDrivers(prev => prev.filter(driver => driver.id !== id));\r\n  };\r\n\r\n  const addStage = (newStage: Omit<Stage, 'id'>) => {\r\n    const stage: Stage = {\r\n      ...newStage,\r\n      id: Date.now().toString(),\r\n    };\r\n    setStages(prev => [...prev, stage]);\r\n  };\r\n\r\n  const updateStage = (id: string, updatedStage: Partial<Stage>) => {\r\n    setStages(prev => prev.map(stage => \r\n      stage.id === id ? { ...stage, ...updatedStage } : stage\r\n    ));\r\n  };\r\n\r\n  const deleteStage = (id: string) => {\r\n    setStages(prev => prev.filter(stage => stage.id !== id));\r\n    // Also remove drivers from deleted stage\r\n    setDrivers(prev => prev.filter(driver => driver.stageId !== id));\r\n  };\r\n\r\n  const getDriversByStage = (stageId: string): Driver[] => {\r\n    return drivers.filter(driver => driver.stageId === stageId);\r\n  };\r\n\r\n  const getEmergencyDrivers = (): Driver[] => {\r\n    return drivers.filter(driver => driver.isEmergency);\r\n  };\r\n\r\n  const searchDrivers = (query: string): Driver[] => {\r\n    if (!query.trim()) return [];\r\n    \r\n    const lowerQuery = query.toLowerCase();\r\n    return drivers.filter(driver =>\r\n      driver.name.toLowerCase().includes(lowerQuery) ||\r\n      driver.phoneNumber.includes(query) ||\r\n      driver.vehicleNumber.toLowerCase().includes(lowerQuery)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <DataContext.Provider\r\n      value={{\r\n        drivers,\r\n        stages,\r\n        addDriver,\r\n        updateDriver,\r\n        deleteDriver,\r\n        addStage,\r\n        updateStage,\r\n        deleteStage,\r\n        getDriversByStage,\r\n        getEmergencyDrivers,\r\n        searchDrivers,\r\n      }}\r\n    >\r\n      {children}\r\n    </DataContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}