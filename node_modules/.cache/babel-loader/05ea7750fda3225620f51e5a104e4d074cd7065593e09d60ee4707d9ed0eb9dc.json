{"ast":null,"code":"var _jsxFileName = \"D:\\\\proj\\\\auto-rickshaw\\\\src\\\\pages\\\\HomePage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { MapPin } from 'lucide-react';\nimport { useLanguage } from '../context/LanguageContext';\nimport { useData } from '../context/DataContext';\nimport SearchBar from '../components/SearchBar';\nimport StageList from '../components/StageList';\nimport DriverCard from '../components/DriverCard';\nimport MapView from '../components/MapView';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const {\n    t\n  } = useLanguage();\n  const {\n    stages,\n    searchDrivers,\n    getEmergencyDrivers,\n    drivers\n  } = useData();\n  const [searchResults, setSearchResults] = useState([]);\n  const [isSearching, setIsSearching] = useState(false);\n  const [selectedStage, setSelectedStage] = useState(null);\n  const emergencyDrivers = getEmergencyDrivers();\n  const handleSearch = query => {\n    if (query.trim()) {\n      setIsSearching(true);\n      const results = searchDrivers(query);\n      setSearchResults(results);\n    } else {\n      setIsSearching(false);\n      setSearchResults([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homepage\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"App-title\",\n        children: t('villageAutoConnect')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"App-subtitle\",\n        children: t('findAutoInstantly')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"search-section\",\n          children: /*#__PURE__*/_jsxDEV(SearchBar, {\n            onSearch: handleSearch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), isSearching && /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"search-results\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: t('searchResults')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), searchResults.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"drivers-grid\",\n            children: searchResults.map(driver => {\n              const stage = stages.find(s => s.id === driver.stageId);\n              return /*#__PURE__*/_jsxDEV(DriverCard, {\n                driver: driver,\n                stage: stage,\n                showStage: true\n              }, driver.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"no-results\",\n            children: t('noDriversFound')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), !isSearching && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"stages-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: t('selectStage')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(StageList, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"map-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: [/*#__PURE__*/_jsxDEV(MapPin, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this), \"Village Map\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MapView, {\n              stages: stages\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"FpMAQStAbni4MHlx2N+hlyF8VGY=\", false, function () {\n  return [useLanguage, useData];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","MapPin","useLanguage","useData","SearchBar","StageList","DriverCard","MapView","jsxDEV","_jsxDEV","Fragment","_Fragment","HomePage","_s","t","stages","searchDrivers","getEmergencyDrivers","drivers","searchResults","setSearchResults","isSearching","setIsSearching","selectedStage","setSelectedStage","emergencyDrivers","handleSearch","query","trim","results","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","length","map","driver","stage","find","s","id","stageId","showStage","size","_c","$RefreshReg$"],"sources":["D:/proj/auto-rickshaw/src/pages/HomePage.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { MapPin, AlertCircle, Users } from 'lucide-react';\r\nimport { useLanguage } from '../context/LanguageContext';\r\nimport { useData } from '../context/DataContext';\r\nimport SearchBar from '../components/SearchBar';\r\nimport StageList from '../components/StageList';\r\nimport DriverCard from '../components/DriverCard';\r\nimport MapView from '../components/MapView';\r\n\r\nconst HomePage: React.FC = () => {\r\n  const { t } = useLanguage();\r\n  const { stages, searchDrivers, getEmergencyDrivers, drivers } = useData();\r\n  const [searchResults, setSearchResults] = useState<any[]>([]);\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const [selectedStage, setSelectedStage] = useState<string | null>(null);\r\n\r\n  const emergencyDrivers = getEmergencyDrivers();\r\n  \r\n  const handleSearch = (query: string) => {\r\n    if (query.trim()) {\r\n      setIsSearching(true);\r\n      const results = searchDrivers(query);\r\n      setSearchResults(results);\r\n    } else {\r\n      setIsSearching(false);\r\n      setSearchResults([]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"homepage\">\r\n      <header className=\"App-header\">\r\n        <h1 className=\"App-title\">{t('villageAutoConnect')}</h1>\r\n        <p className=\"App-subtitle\">{t('findAutoInstantly')}</p>\r\n      </header>\r\n\r\n      <main className=\"main-content\">\r\n        <div className=\"container\">\r\n          {/* Search Section */}\r\n          <section className=\"search-section\">\r\n            <SearchBar onSearch={handleSearch} />\r\n          </section>\r\n\r\n          {/* Search Results */}\r\n          {isSearching && (\r\n            <section className=\"search-results\">\r\n              <h2>{t('searchResults')}</h2>\r\n              {searchResults.length > 0 ? (\r\n                <div className=\"drivers-grid\">\r\n                  {searchResults.map((driver) => {\r\n                    const stage = stages.find(s => s.id === driver.stageId);\r\n                    return (\r\n                      <DriverCard \r\n                        key={driver.id} \r\n                        driver={driver} \r\n                        stage={stage}\r\n                        showStage={true}\r\n                      />\r\n                    );\r\n                  })}\r\n                </div>\r\n              ) : (\r\n                <p className=\"no-results\">{t('noDriversFound')}</p>\r\n              )}\r\n            </section>\r\n          )}\r\n\r\n          {!isSearching && (\r\n            <>\r\n              {/* Stages Section */}\r\n              <section className=\"stages-section\">\r\n                <h2>{t('selectStage')}</h2>\r\n                <StageList />\r\n              </section>\r\n\r\n              {/* Map Section */}\r\n              <section className=\"map-section\">\r\n                <h2>\r\n                  <MapPin size={20} />\r\n                  Village Map\r\n                </h2>\r\n                <MapView stages={stages} />\r\n              </section>\r\n            </>\r\n          )}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}