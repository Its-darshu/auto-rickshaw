{"ast":null,"code":"var _jsxFileName = \"D:\\\\proj\\\\auto-rickshaw\\\\src\\\\context\\\\DataContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataContext = /*#__PURE__*/createContext(undefined);\nexport const useData = () => {\n  _s();\n  const context = useContext(DataContext);\n  if (!context) {\n    throw new Error('useData must be used within a DataProvider');\n  }\n  return context;\n};\n_s(useData, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n// Initial sample data\nconst initialStages = [{\n  id: '1',\n  name: 'Bus Stand',\n  nameKn: 'ಬಸ್ ಸ್ಟಾಂಡ್',\n  latitude: 12.9716,\n  longitude: 77.5946\n}, {\n  id: '2',\n  name: 'Market',\n  nameKn: 'ಮಾರುಕಟ್ಟೆ',\n  latitude: 12.9726,\n  longitude: 77.5956\n}, {\n  id: '3',\n  name: 'Hospital',\n  nameKn: 'ಆಸ್ಪತ್ರೆ',\n  latitude: 12.9736,\n  longitude: 77.5966\n}, {\n  id: '4',\n  name: 'School',\n  nameKn: 'ಶಾಲೆ',\n  latitude: 12.9746,\n  longitude: 77.5976\n}, {\n  id: '5',\n  name: 'Temple',\n  nameKn: 'ದೇವಸ್ಥಾನ',\n  latitude: 12.9756,\n  longitude: 77.5986\n}];\nconst initialDrivers = [{\n  id: '1',\n  name: 'Rajesh Kumar',\n  phoneNumber: '+919876543210',\n  vehicleNumber: 'KA-01-AB-1234',\n  stageId: '1',\n  isEmergency: true,\n  whatsappNumber: '+919876543210'\n}, {\n  id: '2',\n  name: 'Suresh Gowda',\n  phoneNumber: '+919876543211',\n  vehicleNumber: 'KA-01-AB-1235',\n  stageId: '1',\n  isEmergency: false,\n  whatsappNumber: '+919876543211'\n}, {\n  id: '3',\n  name: 'Manjunath',\n  phoneNumber: '+919876543212',\n  vehicleNumber: 'KA-01-AB-1236',\n  stageId: '2',\n  isEmergency: true,\n  whatsappNumber: '+919876543212'\n}, {\n  id: '4',\n  name: 'Venkatesh Reddy',\n  phoneNumber: '+919876543213',\n  vehicleNumber: 'KA-01-AB-1237',\n  stageId: '2',\n  isEmergency: false\n}, {\n  id: '5',\n  name: 'Krishna Murthy',\n  phoneNumber: '+919876543214',\n  vehicleNumber: 'KA-01-AB-1238',\n  stageId: '3',\n  isEmergency: true,\n  whatsappNumber: '+919876543214'\n}, {\n  id: '6',\n  name: 'Ravi Sharma',\n  phoneNumber: '+919876543215',\n  vehicleNumber: 'KA-01-AB-1239',\n  stageId: '4',\n  isEmergency: false,\n  whatsappNumber: '+919876543215'\n}];\nexport const DataProvider = ({\n  children\n}) => {\n  _s2();\n  const [drivers, setDrivers] = useState(initialDrivers);\n  const [stages, setStages] = useState(initialStages);\n  const addDriver = newDriver => {\n    const driver = {\n      ...newDriver,\n      id: Date.now().toString()\n    };\n    setDrivers(prev => [...prev, driver]);\n  };\n  const updateDriver = (id, updatedDriver) => {\n    setDrivers(prev => prev.map(driver => driver.id === id ? {\n      ...driver,\n      ...updatedDriver\n    } : driver));\n  };\n  const deleteDriver = id => {\n    setDrivers(prev => prev.filter(driver => driver.id !== id));\n  };\n  const addStage = newStage => {\n    const stage = {\n      ...newStage,\n      id: Date.now().toString()\n    };\n    setStages(prev => [...prev, stage]);\n  };\n  const updateStage = (id, updatedStage) => {\n    setStages(prev => prev.map(stage => stage.id === id ? {\n      ...stage,\n      ...updatedStage\n    } : stage));\n  };\n  const deleteStage = id => {\n    setStages(prev => prev.filter(stage => stage.id !== id));\n    // Also remove drivers from deleted stage\n    setDrivers(prev => prev.filter(driver => driver.stageId !== id));\n  };\n  const getDriversByStage = stageId => {\n    return drivers.filter(driver => driver.stageId === stageId);\n  };\n  const getEmergencyDrivers = () => {\n    return drivers.filter(driver => driver.isEmergency);\n  };\n  const searchDrivers = query => {\n    if (!query.trim()) return [];\n    const lowerQuery = query.toLowerCase();\n    return drivers.filter(driver => driver.name.toLowerCase().includes(lowerQuery) || driver.phoneNumber.includes(query) || driver.vehicleNumber.toLowerCase().includes(lowerQuery));\n  };\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: {\n      drivers,\n      stages,\n      addDriver,\n      updateDriver,\n      deleteDriver,\n      addStage,\n      updateStage,\n      deleteStage,\n      getDriversByStage,\n      getEmergencyDrivers,\n      searchDrivers\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n};\n_s2(DataProvider, \"hmJavSMi6gjOGF/Rcllch1DNv6Q=\");\n_c = DataProvider;\nvar _c;\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","DataContext","undefined","useData","_s","context","Error","initialStages","id","name","nameKn","latitude","longitude","initialDrivers","phoneNumber","vehicleNumber","stageId","isEmergency","whatsappNumber","DataProvider","children","_s2","drivers","setDrivers","stages","setStages","addDriver","newDriver","driver","Date","now","toString","prev","updateDriver","updatedDriver","map","deleteDriver","filter","addStage","newStage","stage","updateStage","updatedStage","deleteStage","getDriversByStage","getEmergencyDrivers","searchDrivers","query","trim","lowerQuery","toLowerCase","includes","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/proj/auto-rickshaw/src/context/DataContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, ReactNode } from 'react';\r\n\r\nexport interface Driver {\r\n  id: string;\r\n  name: string;\r\n  phoneNumber: string;\r\n  vehicleNumber: string;\r\n  stageId: string;\r\n  isEmergency: boolean;\r\n  whatsappNumber?: string;\r\n}\r\n\r\nexport interface Stage {\r\n  id: string;\r\n  name: string;\r\n  nameKn: string;\r\n  latitude?: number;\r\n  longitude?: number;\r\n}\r\n\r\ninterface DataContextType {\r\n  drivers: Driver[];\r\n  stages: Stage[];\r\n  addDriver: (driver: Omit<Driver, 'id'>) => void;\r\n  updateDriver: (id: string, driver: Partial<Driver>) => void;\r\n  deleteDriver: (id: string) => void;\r\n  addStage: (stage: Omit<Stage, 'id'>) => void;\r\n  updateStage: (id: string, stage: Partial<Stage>) => void;\r\n  deleteStage: (id: string) => void;\r\n  getDriversByStage: (stageId: string) => Driver[];\r\n  getEmergencyDrivers: () => Driver[];\r\n  searchDrivers: (query: string) => Driver[];\r\n}\r\n\r\nconst DataContext = createContext<DataContextType | undefined>(undefined);\r\n\r\nexport const useData = () => {\r\n  const context = useContext(DataContext);\r\n  if (!context) {\r\n    throw new Error('useData must be used within a DataProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface DataProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\n// Initial sample data\r\nconst initialStages: Stage[] = [\r\n  { id: '1', name: 'Bus Stand', nameKn: 'ಬಸ್ ಸ್ಟಾಂಡ್', latitude: 12.9716, longitude: 77.5946 },\r\n  { id: '2', name: 'Market', nameKn: 'ಮಾರುಕಟ್ಟೆ', latitude: 12.9726, longitude: 77.5956 },\r\n  { id: '3', name: 'Hospital', nameKn: 'ಆಸ್ಪತ್ರೆ', latitude: 12.9736, longitude: 77.5966 },\r\n  { id: '4', name: 'School', nameKn: 'ಶಾಲೆ', latitude: 12.9746, longitude: 77.5976 },\r\n  { id: '5', name: 'Temple', nameKn: 'ದೇವಸ್ಥಾನ', latitude: 12.9756, longitude: 77.5986 },\r\n];\r\n\r\nconst initialDrivers: Driver[] = [\r\n  {\r\n    id: '1',\r\n    name: 'Rajesh Kumar',\r\n    phoneNumber: '+919876543210',\r\n    vehicleNumber: 'KA-01-AB-1234',\r\n    stageId: '1',\r\n    isEmergency: true,\r\n    whatsappNumber: '+919876543210'\r\n  },\r\n  {\r\n    id: '2',\r\n    name: 'Suresh Gowda',\r\n    phoneNumber: '+919876543211',\r\n    vehicleNumber: 'KA-01-AB-1235',\r\n    stageId: '1',\r\n    isEmergency: false,\r\n    whatsappNumber: '+919876543211'\r\n  },\r\n  {\r\n    id: '3',\r\n    name: 'Manjunath',\r\n    phoneNumber: '+919876543212',\r\n    vehicleNumber: 'KA-01-AB-1236',\r\n    stageId: '2',\r\n    isEmergency: true,\r\n    whatsappNumber: '+919876543212'\r\n  },\r\n  {\r\n    id: '4',\r\n    name: 'Venkatesh Reddy',\r\n    phoneNumber: '+919876543213',\r\n    vehicleNumber: 'KA-01-AB-1237',\r\n    stageId: '2',\r\n    isEmergency: false,\r\n  },\r\n  {\r\n    id: '5',\r\n    name: 'Krishna Murthy',\r\n    phoneNumber: '+919876543214',\r\n    vehicleNumber: 'KA-01-AB-1238',\r\n    stageId: '3',\r\n    isEmergency: true,\r\n    whatsappNumber: '+919876543214'\r\n  },\r\n  {\r\n    id: '6',\r\n    name: 'Ravi Sharma',\r\n    phoneNumber: '+919876543215',\r\n    vehicleNumber: 'KA-01-AB-1239',\r\n    stageId: '4',\r\n    isEmergency: false,\r\n    whatsappNumber: '+919876543215'\r\n  },\r\n];\r\n\r\nexport const DataProvider: React.FC<DataProviderProps> = ({ children }) => {\r\n  const [drivers, setDrivers] = useState<Driver[]>(initialDrivers);\r\n  const [stages, setStages] = useState<Stage[]>(initialStages);\r\n\r\n  const addDriver = (newDriver: Omit<Driver, 'id'>) => {\r\n    const driver: Driver = {\r\n      ...newDriver,\r\n      id: Date.now().toString(),\r\n    };\r\n    setDrivers(prev => [...prev, driver]);\r\n  };\r\n\r\n  const updateDriver = (id: string, updatedDriver: Partial<Driver>) => {\r\n    setDrivers(prev => prev.map(driver => \r\n      driver.id === id ? { ...driver, ...updatedDriver } : driver\r\n    ));\r\n  };\r\n\r\n  const deleteDriver = (id: string) => {\r\n    setDrivers(prev => prev.filter(driver => driver.id !== id));\r\n  };\r\n\r\n  const addStage = (newStage: Omit<Stage, 'id'>) => {\r\n    const stage: Stage = {\r\n      ...newStage,\r\n      id: Date.now().toString(),\r\n    };\r\n    setStages(prev => [...prev, stage]);\r\n  };\r\n\r\n  const updateStage = (id: string, updatedStage: Partial<Stage>) => {\r\n    setStages(prev => prev.map(stage => \r\n      stage.id === id ? { ...stage, ...updatedStage } : stage\r\n    ));\r\n  };\r\n\r\n  const deleteStage = (id: string) => {\r\n    setStages(prev => prev.filter(stage => stage.id !== id));\r\n    // Also remove drivers from deleted stage\r\n    setDrivers(prev => prev.filter(driver => driver.stageId !== id));\r\n  };\r\n\r\n  const getDriversByStage = (stageId: string): Driver[] => {\r\n    return drivers.filter(driver => driver.stageId === stageId);\r\n  };\r\n\r\n  const getEmergencyDrivers = (): Driver[] => {\r\n    return drivers.filter(driver => driver.isEmergency);\r\n  };\r\n\r\n  const searchDrivers = (query: string): Driver[] => {\r\n    if (!query.trim()) return [];\r\n    \r\n    const lowerQuery = query.toLowerCase();\r\n    return drivers.filter(driver =>\r\n      driver.name.toLowerCase().includes(lowerQuery) ||\r\n      driver.phoneNumber.includes(query) ||\r\n      driver.vehicleNumber.toLowerCase().includes(lowerQuery)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <DataContext.Provider\r\n      value={{\r\n        drivers,\r\n        stages,\r\n        addDriver,\r\n        updateDriver,\r\n        deleteDriver,\r\n        addStage,\r\n        updateStage,\r\n        deleteStage,\r\n        getDriversByStage,\r\n        getEmergencyDrivers,\r\n        searchDrivers,\r\n      }}\r\n    >\r\n      {children}\r\n    </DataContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}