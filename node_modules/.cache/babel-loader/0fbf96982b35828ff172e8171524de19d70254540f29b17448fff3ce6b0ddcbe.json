{"ast":null,"code":"var _jsxFileName = \"D:\\\\proj\\\\auto-rickshaw\\\\src\\\\context\\\\DataContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataContext = /*#__PURE__*/createContext(undefined);\nexport const useData = () => {\n  _s();\n  const context = useContext(DataContext);\n  if (!context) {\n    throw new Error('useData must be used within a DataProvider');\n  }\n  return context;\n};\n_s(useData, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n// Firestore collections\nconst DRIVERS_COLLECTION = 'drivers';\nconst STAGES_COLLECTION = 'stages';\nexport const DataProvider = ({\n  children\n}) => {\n  _s2();\n  const [drivers, setDrivers] = useState(initialDrivers);\n  const [stages, setStages] = useState(initialStages);\n  const addDriver = newDriver => {\n    const driver = {\n      ...newDriver,\n      id: Date.now().toString()\n    };\n    setDrivers(prev => [...prev, driver]);\n  };\n  const updateDriver = (id, updatedDriver) => {\n    setDrivers(prev => prev.map(driver => driver.id === id ? {\n      ...driver,\n      ...updatedDriver\n    } : driver));\n  };\n  const deleteDriver = id => {\n    setDrivers(prev => prev.filter(driver => driver.id !== id));\n  };\n  const addStage = newStage => {\n    const stage = {\n      ...newStage,\n      id: Date.now().toString()\n    };\n    setStages(prev => [...prev, stage]);\n  };\n  const updateStage = (id, updatedStage) => {\n    setStages(prev => prev.map(stage => stage.id === id ? {\n      ...stage,\n      ...updatedStage\n    } : stage));\n  };\n  const deleteStage = id => {\n    setStages(prev => prev.filter(stage => stage.id !== id));\n    // Also remove drivers from deleted stage\n    setDrivers(prev => prev.filter(driver => driver.stageId !== id));\n  };\n  const getDriversByStage = stageId => {\n    return drivers.filter(driver => driver.stageId === stageId);\n  };\n  const getEmergencyDrivers = () => {\n    return drivers.filter(driver => driver.isEmergency);\n  };\n  const searchDrivers = query => {\n    if (!query.trim()) return [];\n    const lowerQuery = query.toLowerCase();\n    return drivers.filter(driver => driver.name.toLowerCase().includes(lowerQuery) || driver.phoneNumber.includes(query) || driver.vehicleNumber.toLowerCase().includes(lowerQuery));\n  };\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: {\n      drivers,\n      stages,\n      addDriver,\n      updateDriver,\n      deleteDriver,\n      addStage,\n      updateStage,\n      deleteStage,\n      getDriversByStage,\n      getEmergencyDrivers,\n      searchDrivers\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_s2(DataProvider, \"hmJavSMi6gjOGF/Rcllch1DNv6Q=\");\n_c = DataProvider;\nvar _c;\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","DataContext","undefined","useData","_s","context","Error","DRIVERS_COLLECTION","STAGES_COLLECTION","DataProvider","children","_s2","drivers","setDrivers","initialDrivers","stages","setStages","initialStages","addDriver","newDriver","driver","id","Date","now","toString","prev","updateDriver","updatedDriver","map","deleteDriver","filter","addStage","newStage","stage","updateStage","updatedStage","deleteStage","stageId","getDriversByStage","getEmergencyDrivers","isEmergency","searchDrivers","query","trim","lowerQuery","toLowerCase","name","includes","phoneNumber","vehicleNumber","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/proj/auto-rickshaw/src/context/DataContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { \r\n  collection, \r\n  addDoc, \r\n  updateDoc, \r\n  deleteDoc, \r\n  doc, \r\n  onSnapshot, \r\n  query, \r\n  orderBy,\r\n  getDocs,\r\n  writeBatch\r\n} from 'firebase/firestore';\r\nimport { db } from '../config/firebase';\r\n\r\nexport interface Driver {\r\n  id: string;\r\n  name: string;\r\n  phoneNumber: string;\r\n  vehicleNumber: string;\r\n  stageId: string;\r\n  isEmergency: boolean;\r\n  whatsappNumber?: string;\r\n}\r\n\r\nexport interface Stage {\r\n  id: string;\r\n  name: string;\r\n  nameKn: string;\r\n  latitude?: number;\r\n  longitude?: number;\r\n}\r\n\r\ninterface DataContextType {\r\n  drivers: Driver[];\r\n  stages: Stage[];\r\n  addDriver: (driver: Omit<Driver, 'id'>) => void;\r\n  updateDriver: (id: string, driver: Partial<Driver>) => void;\r\n  deleteDriver: (id: string) => void;\r\n  addStage: (stage: Omit<Stage, 'id'>) => void;\r\n  updateStage: (id: string, stage: Partial<Stage>) => void;\r\n  deleteStage: (id: string) => void;\r\n  getDriversByStage: (stageId: string) => Driver[];\r\n  getEmergencyDrivers: () => Driver[];\r\n  searchDrivers: (query: string) => Driver[];\r\n}\r\n\r\nconst DataContext = createContext<DataContextType | undefined>(undefined);\r\n\r\nexport const useData = () => {\r\n  const context = useContext(DataContext);\r\n  if (!context) {\r\n    throw new Error('useData must be used within a DataProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface DataProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\n// Firestore collections\r\nconst DRIVERS_COLLECTION = 'drivers';\r\nconst STAGES_COLLECTION = 'stages';\r\n\r\nexport const DataProvider: React.FC<DataProviderProps> = ({ children }) => {\r\n  const [drivers, setDrivers] = useState<Driver[]>(initialDrivers);\r\n  const [stages, setStages] = useState<Stage[]>(initialStages);\r\n\r\n  const addDriver = (newDriver: Omit<Driver, 'id'>) => {\r\n    const driver: Driver = {\r\n      ...newDriver,\r\n      id: Date.now().toString(),\r\n    };\r\n    setDrivers(prev => [...prev, driver]);\r\n  };\r\n\r\n  const updateDriver = (id: string, updatedDriver: Partial<Driver>) => {\r\n    setDrivers(prev => prev.map(driver => \r\n      driver.id === id ? { ...driver, ...updatedDriver } : driver\r\n    ));\r\n  };\r\n\r\n  const deleteDriver = (id: string) => {\r\n    setDrivers(prev => prev.filter(driver => driver.id !== id));\r\n  };\r\n\r\n  const addStage = (newStage: Omit<Stage, 'id'>) => {\r\n    const stage: Stage = {\r\n      ...newStage,\r\n      id: Date.now().toString(),\r\n    };\r\n    setStages(prev => [...prev, stage]);\r\n  };\r\n\r\n  const updateStage = (id: string, updatedStage: Partial<Stage>) => {\r\n    setStages(prev => prev.map(stage => \r\n      stage.id === id ? { ...stage, ...updatedStage } : stage\r\n    ));\r\n  };\r\n\r\n  const deleteStage = (id: string) => {\r\n    setStages(prev => prev.filter(stage => stage.id !== id));\r\n    // Also remove drivers from deleted stage\r\n    setDrivers(prev => prev.filter(driver => driver.stageId !== id));\r\n  };\r\n\r\n  const getDriversByStage = (stageId: string): Driver[] => {\r\n    return drivers.filter(driver => driver.stageId === stageId);\r\n  };\r\n\r\n  const getEmergencyDrivers = (): Driver[] => {\r\n    return drivers.filter(driver => driver.isEmergency);\r\n  };\r\n\r\n  const searchDrivers = (query: string): Driver[] => {\r\n    if (!query.trim()) return [];\r\n    \r\n    const lowerQuery = query.toLowerCase();\r\n    return drivers.filter(driver =>\r\n      driver.name.toLowerCase().includes(lowerQuery) ||\r\n      driver.phoneNumber.includes(query) ||\r\n      driver.vehicleNumber.toLowerCase().includes(lowerQuery)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <DataContext.Provider\r\n      value={{\r\n        drivers,\r\n        stages,\r\n        addDriver,\r\n        updateDriver,\r\n        deleteDriver,\r\n        addStage,\r\n        updateStage,\r\n        deleteStage,\r\n        getDriversByStage,\r\n        getEmergencyDrivers,\r\n        searchDrivers,\r\n      }}\r\n    >\r\n      {children}\r\n    </DataContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}